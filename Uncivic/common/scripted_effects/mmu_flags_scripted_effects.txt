mmu_flags_set = {
	switch = {
		trigger = is_scope_type
		agreement = { set_agreement_flag = $FLAG$ }
		ambient_object = { set_ambient_object_flag = $FLAG$ }
		army = { set_army_flag = $FLAG$ }
		astral_rift = { set_astral_rift_flag = $FLAG$ }
		country = { set_country_flag = $FLAG$ }
		deposit = { set_deposit_flag = $FLAG$ }
		design = { set_design_flag = $FLAG$ }
		espionage_asset = { set_espionage_asset_flag = $FLAG$ }
		espionage_operation = { set_espionage_operation_flag = $FLAG$ }
		federation = { set_federation_flag = $FLAG$ }
		first_contact = { set_first_contact_flag = $FLAG$ }
		fleet = { set_fleet_flag = $FLAG$ }
		leader = { set_leader_flag = $FLAG$ }
		megastructure = { set_megastructure_flag = $FLAG$ }
		planet = { set_planet_flag = $FLAG$ }
		pop_faction = { set_pop_faction_flag = $FLAG$ }
		pop_group = { set_pop_group_flag = $FLAG$ }
		sector = { set_sector_flag = $FLAG$ }
		ship = { set_ship_flag = $FLAG$ }
		situation = { set_situation_flag = $FLAG$ }
		species = { set_species_flag = $FLAG$ }
		spynetwork = { set_spynetwork_flag = $FLAG$ }
		starbase = { set_starbase_flag = $FLAG$ }
		war = { set_war_flag = $FLAG$ }
		# exceptions: these do not follow the pattern set_<scope>_flag
		archaeological_site = { set_archaeology_flag = $FLAG$ }
		galactic_object = { set_star_flag = $FLAG$ }
		none = { set_global_flag = $FLAG$ }
		storm_influence_field = { log_error = "storm_influence_field doesn't support flags" }
		default = {
			# is_scope_type = cosmic_storm/cosmicstorm/storm all throw an error
			# but since this is the only scope with that problem, just handle it in the default case
			set_storm_flag = $FLAG$
		}
	}
}

mmu_flags_remove = {
	switch = {
		trigger = is_scope_type
		agreement = { remove_agreement_flag = $FLAG$ }
		ambient_object = { remove_ambient_object_flag = $FLAG$ }
		army = { remove_army_flag = $FLAG$ }
		astral_rift = { remove_astral_rift_flag = $FLAG$ }
		country = { remove_country_flag = $FLAG$ }
		deposit = { remove_deposit_flag = $FLAG$ }
		design = { remove_design_flag = $FLAG$ }
		espionage_asset = { remove_espionage_asset_flag = $FLAG$ }
		espionage_operation = { remove_espionage_operation_flag = $FLAG$ }
		federation = { remove_federation_flag = $FLAG$ }
		first_contact = { remove_first_contact_flag = $FLAG$ }
		fleet = { remove_fleet_flag = $FLAG$ }
		leader = { remove_leader_flag = $FLAG$ }
		megastructure = { remove_megastructure_flag = $FLAG$ }
		planet = { remove_planet_flag = $FLAG$ }
		pop_faction = { remove_pop_faction_flag = $FLAG$ }
		pop_group = { remove_pop_group_flag = $FLAG$ }
		sector = { remove_sector_flag = $FLAG$ }
		ship = { remove_ship_flag = $FLAG$ }
		situation = { remove_situation_flag = $FLAG$ }
		species = { remove_species_flag = $FLAG$ }
		spynetwork = { remove_spynetwork_flag = $FLAG$ }
		starbase = { remove_starbase_flag = $FLAG$ }
		war = { remove_war_flag = $FLAG$ }
		# exceptions: these do not follow the pattern remove_<scope>_flag
		archaeological_site = { remove_archaeology_flag = $FLAG$ }
		galactic_object = { remove_star_flag = $FLAG$ }
		none = { remove_global_flag = $FLAG$ }
		storm_influence_field = { log_error = "storm_influence_field doesn't support flags" }
		default = {
			# is_scope_type = cosmic_storm/cosmicstorm/storm all throw an error
			# but since this is the only scope with that problem, just handle it in the default case
			# remove_storm_flag = $FLAG$
			# actually, remove_storm_flag isn't implemented
			log_error = "cosmic_storm doesn't support removing flags"
		}
	}
}